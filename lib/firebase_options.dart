// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions web = FirebaseOptions(
    apiKey: dotenv.env['WEBAPI'] ?? 'WEBAPI NOT FOUND',
    appId: dotenv.env['WEBAPPID'] ?? 'WEBAPPID not found',
    messagingSenderId: dotenv.env['WEBMSI'] ?? 'WEBMSI NOT FOUND',
    projectId: 'flutter-todoapp-sa',
    authDomain: 'flutter-todoapp-sa.firebaseapp.com',
    storageBucket: 'flutter-todoapp-sa.appspot.com',
    measurementId: 'G-7BFS5N9ZH1',
  );

  static FirebaseOptions android = FirebaseOptions(
    apiKey: dotenv.env['ANDAPI'] ?? 'ANDAPI NOT FOUND',
    appId: dotenv.env['ANDAPPID'] ?? 'ANDAPPID NOT FOUND',
    messagingSenderId: dotenv.env['ANDMSI'] ?? 'ANDMSI NOT FOUND',
    projectId: 'flutter-todoapp-sa',
    storageBucket: 'flutter-todoapp-sa.appspot.com',
  );

  static FirebaseOptions ios = FirebaseOptions(
    apiKey: dotenv.env['IOSAPI'] ?? 'IOSAPI NOT FOUND',
    appId: dotenv.env['IOSAPPID'] ?? 'IOSAPPID NOT FOUND',
    messagingSenderId: '840395161201',
    projectId: 'flutter-todoapp-sa',
    storageBucket: 'flutter-todoapp-sa.appspot.com',
    iosClientId: dotenv.env['IOSCID'] ?? 'IOSCID NOT FOUND',
    iosBundleId: 'com.learning.todoapp',
  );

  static FirebaseOptions macos = FirebaseOptions(
    apiKey: dotenv.env['MACAPI'] ?? 'MACAPI NOT FOUND',
    appId: dotenv.env['MACAPPID'] ?? 'MACAPPID NOT FOUND',
    messagingSenderId: dotenv.env['MACMSI'] ?? 'MACMSI NOT FOUND',
    projectId: 'flutter-todoapp-sa',
    storageBucket: 'flutter-todoapp-sa.appspot.com',
    iosClientId: dotenv.env['MACCID'] ?? 'MACCID NOT FOUND ',
    iosBundleId: 'com.learning.todoapp.RunnerTests',
  );
}
